Meta:
  num_objs: 3

Environment:
  dimensions: [20, 20]
  ep_length: 12  # episode length
  timestep_penalty: 0
  global_reward_mode: "Aggregated"  # Options: "Aggregated", "Final"
  local_reward_mode: "exponential" # Options: inverse_distance, exponential
  local_reward_kneecap: 10.0 # Distance from POI at which local reward is exactly 1 (higher if closer)
  local_reward_temp: 2 # higher, the smoother the reward gradient (irrelevant if reward mode is inverse_distnace)
  observation_mode: 'density' # Options: 'count' or 'density'
  poi_obs_temp: 2 # Temp if density observation mode
  agent_obs_temp: 2 # Temp if density observation mode
  include_location_in_obs: False # Should the agent know its own position?

  # Objectives must start from 0.
  pois:
    - obj: 0
      location: [6, 18]
      radius: 1
      coupling: 1
      obs_window: [0, 90]
      reward: 1
      repeat: False
    - obj: 1
      location: [10, 18]
      radius: 1
      coupling: 1
      obs_window: [0, 90]
      reward: 1
      repeat: False
    - obj: 2
      location: [14, 18]
      radius: 1
      coupling: 1
      obs_window: [0, 90]
      reward: 1
      repeat: False
    - obj: 0
      location: [18, 14]
      radius: 1
      coupling: 1
      obs_window: [0, 90]
      reward: 1
      repeat: False
    - obj: 1
      location: [18, 10]
      radius: 1
      coupling: 1
      obs_window: [0, 90]
      reward: 1
      repeat: False
    - obj: 2
      location: [18, 6]
      radius: 1
      coupling: 1
      obs_window: [0, 90]
      reward: 1
      repeat: False
    - obj: 0
      location: [14, 2]
      radius: 1
      coupling: 1
      obs_window: [0, 90]
      reward: 1
      repeat: False
    - obj: 1
      location: [10, 2]
      radius: 1
      coupling: 1
      obs_window: [0, 90]
      reward: 1
      repeat: False
    - obj: 2
      location: [6, 2]
      radius: 1
      coupling: 1
      obs_window: [0, 90]
      reward: 1
      repeat: False
    - obj: 0
      location: [2, 6]
      radius: 1
      coupling: 1
      obs_window: [0, 90]
      reward: 1
      repeat: False
    - obj: 1
      location: [2, 10]
      radius: 1
      coupling: 1
      obs_window: [0, 90]
      reward: 1
      repeat: False
    - obj: 2
      location: [2, 14]
      radius: 1
      coupling: 1
      obs_window: [0, 90]
      reward: 1
      repeat: False

Agents:
  starting_locs: [[10, 10], [10, 10], [10, 10], [10, 10]] #Remember, the dimensionality of this influences the state input size. Length determines team size!!!
  num_sensors: [4, 4, 4, 4] # Remember, these many sensors for detecting pois + these many sensors for detecting other agents
  observation_radii: [9, 9, 9, 9]
  max_step_sizes: [1, 1, 1, 1]